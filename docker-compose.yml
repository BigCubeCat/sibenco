services:
  # nginx:
  #   image: nginx
  #   ports:
  #     - "9999:9999"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  postgres:
    image: postgres:latest
    container_name: vanger_db
    environment:
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_DB=${PG_DATABASE}
    ports:
      - ${PG_PORT}:${PG_PORT}
    volumes:
      - pg_data_container:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${PG_USER} -d ${PG_DATABASE}"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  vangers:
    depends_on:
      - postgres
    build: ./drivers/backend
    container_name: vangers
    restart: always
    ports:
      - ${EXTERNAL_PORT}:${INTERNAL_PORT}
    environment:
      - PORT=${EXTERNAL_PORT}
      - USERNAME=${PG_USER}
      - PASSWORD=${PG_PASSWORD}
      - PORT_DB=${PG_PORT}
      - DATABASE=${PG_DATABASE}
    stdin_open: true
    tty: true
  cache:
    image: redis:alpine
    restart: always
    # command: redis-server --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    ports:
      - 6379:6379
  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    volumes:
      - mongodb_data_container:/data/db
  osrm:
    build: ./osrm
    restart: always
    ports:
      - ${OSRM_EXTERNAL_PORT}:${OSRM_INTERNAL_PORT}
    command: ${OSRM_COMMAND}

  # backend:
  #   depends_on:
  #     - mongo
  #   build: ./backend
  #   restart: always
  #   # ports:
  #   #   - ${USER_PORT}:${USER_PORT}
  #   environment:
  #     - USER_PORT=${USER_PORT}
  #     - JWT_KEY=${JWT_KEY}
  #     - MONGO_URL=mongodb://${MONGO_USER}:${MONGO_PASS}@mongo:${MONGO_PORT}
  #     - OSRM_URL=http://@osrm:${OSRM_INTERNAL_PORT}
  #     - GEOWORD_URL=http://@geoword:${GEOWORD_PORT}
  #   stdin_open: true
  #   tty: true
  auth:
    # depends_on:
    #   - backend
    build: ./auth
    restart: always
    ports:
      - ${AUTH_PORT}:${AUTH_PORT}
    environment:
      - PORT=${AUTH_PORT}
      - JWT_SECRET=${JWT_KEY}
      - ROUTE_ADDRESS=http://@backend:${USER_PORT}
    stdin_open: true
    tty: true

volumes:
  pg_data_container:
  mongodb_data_container:
